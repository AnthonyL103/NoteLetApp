{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyli/react-noteletapp/frontend/src/mocktests/MTentry.js\",\n  _s = $RefreshSig$();\n//md delete forever is just a visual icon\nimport { useState, useEffect } from \"react\";\nimport AddMockTest from \"./AddMockTest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MTentry = ({\n  mocktestkey,\n  filepath,\n  Questions,\n  MTName,\n  scanname,\n  date,\n  entryType,\n  displayModal,\n  pausescroll,\n  viewall,\n  closeVA\n}) => {\n  _s();\n  const [showStudyModal, setShowStudyModal] = useState(false);\n  useEffect(() => {\n    pausescroll(showStudyModal);\n  }, [showStudyModal]);\n  const handleDelete = () => {\n    displayModal(mocktestkey, entryType);\n    pausescroll(false);\n  };\n  const handleclose = () => {\n    if (viewall) {\n      closeVA();\n    }\n    setShowStudyModal(false);\n    console.log(showStudyModal);\n  };\n  const handleStudy = () => {\n    setShowStudyModal(true);\n    console.log(showStudyModal);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MTentry\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"studyEntryTitle\",\n      children: [\"Mock Test study name: \", MTName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"studyEntrybody\",\n      children: [\"Mock Test scan name: \", scanname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"studyEntrybody\",\n      children: [\"Date: \", date, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MTentry-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"study-button\",\n        onClick: handleStudy,\n        children: \"Study\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"del-button\",\n        onClick: handleDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), showStudyModal && /*#__PURE__*/_jsxDEV(AddMockTest, {\n      filepath: filepath,\n      scanname: scanname,\n      text: \"\" // No text needed\n      ,\n      date: date,\n      onClosePrevMT: handleclose,\n      onDeletePrevMT: handleDelete // Close function\n      ,\n      onAddMockTest: null // Pass null if not needed\n      ,\n      Past: true,\n      prevMT: Questions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n};\n_s(MTentry, \"pB0i7ZwXif7xmvhZ00kw0t+x5Io=\");\n_c = MTentry;\nexport default MTentry;\nvar _c;\n$RefreshReg$(_c, \"MTentry\");","map":{"version":3,"names":["useState","useEffect","AddMockTest","jsxDEV","_jsxDEV","MTentry","mocktestkey","filepath","Questions","MTName","scanname","date","entryType","displayModal","pausescroll","viewall","closeVA","_s","showStudyModal","setShowStudyModal","handleDelete","handleclose","console","log","handleStudy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","text","onClosePrevMT","onDeletePrevMT","onAddMockTest","Past","prevMT","_c","$RefreshReg$"],"sources":["/Users/anthonyli/react-noteletapp/frontend/src/mocktests/MTentry.js"],"sourcesContent":["//md delete forever is just a visual icon\nimport {useState, useEffect} from \"react\";\nimport AddMockTest from \"./AddMockTest\";\n\nconst MTentry = ({ mocktestkey, filepath, Questions, MTName, scanname, date, entryType, displayModal, pausescroll, viewall, closeVA }) => {\n    const [showStudyModal, setShowStudyModal] = useState(false);\n    \n    useEffect(() => {\n        pausescroll(showStudyModal);\n    }, [showStudyModal]);\n      \n    \n    const handleDelete = () => {\n      displayModal(mocktestkey, entryType);\n      pausescroll(false);\n    };\n    \n    const handleclose = () => {\n        if (viewall) {\n            closeVA();\n        }\n        setShowStudyModal(false);\n        console.log(showStudyModal);\n      };\n      \n    const handleStudy = () => {\n        setShowStudyModal(true);\n        console.log(showStudyModal);\n      };\n    \n    return (\n      <div className=\"MTentry\">\n        <p className=\"studyEntryTitle\">Mock Test study name: {MTName}</p>\n        <p className=\"studyEntrybody\">Mock Test scan name: {scanname}</p>\n        <p className=\"studyEntrybody\">Date: {date} </p>\n        <div className=\"MTentry-footer\">\n          <button className=\"study-button\" onClick={handleStudy} >\n            Study\n          </button>\n          <button className = \"del-button\" onClick={handleDelete}>\n            Delete\n          </button>\n        </div>\n        {showStudyModal && (\n        <AddMockTest\n          filepath={filepath}\n          scanname={scanname}\n          text={\"\"} // No text needed\n          date={date}\n          onClosePrevMT={handleclose}\n          onDeletePrevMT={handleDelete} // Close function\n          onAddMockTest={null} // Pass null if not needed\n          Past= {true}\n          prevMT = {Questions}\n        />\n      )}\n      </div>\n    );\n  };\n  \n  export default MTentry;\n        \n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}