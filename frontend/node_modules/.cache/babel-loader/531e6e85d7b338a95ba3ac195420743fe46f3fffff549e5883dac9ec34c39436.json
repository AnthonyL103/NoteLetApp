{"ast":null,"code":"var _jsxFileName = \"/workspaces/NoteLetApp/frontend/src/Question.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = ({\n  question,\n  updateChosenAnswer\n}) => {\n  _s();\n  const [chosen, setChosen] = useState(question.chosen || null);\n  const handleAnswerChange = answer => {\n    console.log(\"Hello\");\n    setChosen(answer);\n    updateChosenAnswer(question.number, answer);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"radio-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"question\",\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"steps\",\n        children: [question.number, \"/\", question.total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), question.answers.map((answer, index) =>\n    /*#__PURE__*/\n    //using react fragment instead, and didn't work before because radio options were missing name attribute \n    _jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: `value-${index}-${question.number}`,\n        name: `question-${question.number}`,\n        value: answer,\n        checked: chosen === answer,\n        onChange: () => handleAnswerChange(answer)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `value-${index}-${question.number}`,\n        children: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(Question, \"JOPn3aOM3RBAcMIu3V58rp+9o/Q=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Question","question","updateChosenAnswer","_s","chosen","setChosen","handleAnswerChange","answer","console","log","number","className","children","fileName","_jsxFileName","lineNumber","columnNumber","total","answers","map","index","Fragment","type","id","name","value","checked","onChange","htmlFor","_c","$RefreshReg$"],"sources":["/workspaces/NoteLetApp/frontend/src/Question.js"],"sourcesContent":["import React, { useState} from 'react';\n\nconst Question = ({ question,updateChosenAnswer}) => { \n    const [chosen, setChosen] = useState(question.chosen || null);\n    \n    const handleAnswerChange = (answer) => {\n        console.log(\"Hello\");\n        setChosen(answer);\n        updateChosenAnswer(question.number, answer);\n    };\n    \n    return (\n        <div className=\"radio-input\">\n            <div className=\"info\">\n                <span className=\"question\">{question.question}</span>\n                <span className=\"steps\">{question.number}/{question.total}</span> \n            </div>\n\n            {question.answers.map((answer, index) => (\n                //using react fragment instead, and didn't work before because radio options were missing name attribute \n                <React.Fragment key={index}>\n                    <input\n                        type=\"radio\"\n                        id={`value-${index}-${question.number}`}\n                        name={`question-${question.number}`}\n                        value={answer}\n                        checked={chosen === answer}\n                        onChange={() => handleAnswerChange(answer)}\n                    />\n                    <label htmlFor={`value-${index}-${question.number}`}>{answer}</label>\n                </React.Fragment>\n            ))}\n\n        </div>\n    );\n};\n\nexport default Question;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,QAAQ;EAACC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAACI,QAAQ,CAACG,MAAM,IAAI,IAAI,CAAC;EAE7D,MAAME,kBAAkB,GAAIC,MAAM,IAAK;IACnCC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpBJ,SAAS,CAACE,MAAM,CAAC;IACjBL,kBAAkB,CAACD,QAAQ,CAACS,MAAM,EAAEH,MAAM,CAAC;EAC/C,CAAC;EAED,oBACIR,OAAA;IAAKY,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxBb,OAAA;MAAKY,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBb,OAAA;QAAMY,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAEX,QAAQ,CAACA;MAAQ;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrDjB,OAAA;QAAMY,SAAS,EAAC,OAAO;QAAAC,QAAA,GAAEX,QAAQ,CAACS,MAAM,EAAC,GAAC,EAACT,QAAQ,CAACgB,KAAK;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC,EAELf,QAAQ,CAACiB,OAAO,CAACC,GAAG,CAAC,CAACZ,MAAM,EAAEa,KAAK;IAAA;IAChC;IACArB,OAAA,CAACH,KAAK,CAACyB,QAAQ;MAAAT,QAAA,gBACXb,OAAA;QACIuB,IAAI,EAAC,OAAO;QACZC,EAAE,EAAE,SAASH,KAAK,IAAInB,QAAQ,CAACS,MAAM,EAAG;QACxCc,IAAI,EAAE,YAAYvB,QAAQ,CAACS,MAAM,EAAG;QACpCe,KAAK,EAAElB,MAAO;QACdmB,OAAO,EAAEtB,MAAM,KAAKG,MAAO;QAC3BoB,QAAQ,EAAEA,CAAA,KAAMrB,kBAAkB,CAACC,MAAM;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFjB,OAAA;QAAO6B,OAAO,EAAE,SAASR,KAAK,IAAInB,QAAQ,CAACS,MAAM,EAAG;QAAAE,QAAA,EAAEL;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GATpDI,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUV,CACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEd,CAAC;AAACb,EAAA,CAjCIH,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}