{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyli/react-noteletapp/frontend/src/authentication/Authentication.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useUser } from './UserContext';\nimport { useScan } from '../scans/ScanContext';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Authentication = () => {\n  _s();\n  const {\n    setCurrentScan\n  } = useScan();\n  const {\n    userId,\n    setUserId,\n    setEmail,\n    setTotalScans,\n    setTotalFlashcards,\n    setTotalMockTests,\n    setName\n  } = useUser();\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [showSignUpModal, setShowSignUpModal] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [useremail, setUserEmail] = useState(\"\");\n  const [username, setUserName] = useState(\"\");\n  const [showChangePasswordModal, setShowChangePasswordModal] = useState(false);\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\n  const [showForgotPasswordModal, setShowForgotPasswordModal] = useState(false);\n  const [isCodeSent, setIsCodeSent] = useState(false);\n  const [verificationCode, setVerificationCode] = useState(\"\");\n  const [countdown, setCountdown] = useState(300); // 5-minute timer (300s)\n  const [timerActive, setTimerActive] = useState(false);\n  useEffect(() => {\n    if (timerActive && countdown > 0) {\n      const interval = setInterval(() => {\n        setCountdown(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [countdown, timerActive]);\n  useEffect(() => {\n    const storedUserId = localStorage.getItem(\"userId\");\n    const storedEmail = localStorage.getItem(\"email\");\n    const storedName = localStorage.getItem(\"name\");\n    if (storedUserId) setUserId(storedUserId);\n    if (storedEmail) setEmail(storedEmail);\n    if (storedName) setName(storedName);\n  }, []);\n  const handleSignUp = () => {\n    setShowSignUpModal(true);\n    setErrorMessage(\"\");\n  };\n  const handleLogIn = () => {\n    setShowLoginModal(true);\n    setErrorMessage(\"\");\n  };\n  const handlegotosignup = () => {\n    setShowLoginModal(false);\n    setShowSignUpModal(true);\n    setErrorMessage(\"\");\n  };\n  const handlegotologin = () => {\n    setShowSignUpModal(false);\n    setShowLoginModal(true);\n    setErrorMessage(\"\");\n  };\n  const handleChangePassword = () => {\n    setShowChangePasswordModal(true);\n    setErrorMessage(\"\");\n  };\n  const handleforgotpassword = () => {\n    setShowLoginModal(false);\n    setShowForgotPasswordModal(true);\n    setErrorMessage(\"\");\n  };\n  const handleLoggedIn = async e => {\n    e.preventDefault();\n    setErrorMessage(\"\");\n    try {\n      let response;\n      if (isCodeSent) {\n        // If code is sent, verify and log in using the code\n        response = await fetch(\"https://api.zukini.com/account/loginforgotpass\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: useremail\n          })\n        });\n      } else {\n        // Normal email/password login\n        response = await fetch(\"https://api.zukini.com/account/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            Email: useremail,\n            Password: password\n          })\n        });\n      }\n      const data = await response.json();\n      if (data.success) {\n        setUserId(data.userId);\n        setEmail(data.email);\n        setName(data.name);\n        localStorage.setItem(\"userId\", data.userId);\n        localStorage.setItem(\"email\", data.email);\n        localStorage.setItem(\"name\", data.name);\n        setShowLoginModal(false);\n        setShowForgotPasswordModal(false);\n        setIsCodeSent(false);\n        setVerificationCode(\"\");\n        setCountdown(300);\n        setTimerActive(false);\n        set;\n        setPassword(\"\"); // Clear password field\n      } else {\n        setErrorMessage(data.message);\n      }\n    } catch (error) {\n      console.error(\"Error logging in:\", error);\n      setErrorMessage(\"Login failed. Please try again.\");\n    }\n  };\n  const handleLogout = () => {\n    setCurrentScan(null);\n    localStorage.removeItem('currentScan');\n    const newGuestId = `guest-${uuidv4()}`;\n    sessionStorage.setItem(\"guestUserId\", newGuestId); // Store in session storage\n    setUserId(newGuestId); // Assign new guest ID instead of null\n    setEmail(null);\n    setName(null);\n    setTotalScans(0);\n    setTotalFlashcards(0);\n    setTotalMockTests(0);\n    localStorage.removeItem(\"userId\");\n    localStorage.removeItem(\"email\");\n    localStorage.removeItem(\"name\");\n  };\n  const handleclose = e => {\n    e.preventDefault(); // Prevent form validation from triggering\n    setShowLoginModal(false);\n    setShowSignUpModal(false);\n    setShowChangePasswordModal(false);\n    setShowForgotPasswordModal(false);\n    setErrorMessage(\"\");\n    setUserEmail(\"\");\n    setUserName(\"\");\n    setPassword(\"\");\n    setConfirmPassword(\"\");\n    setOldPassword(\"\");\n    setNewPassword(\"\");\n    setIsCodeSent(false);\n    setVerificationCode(\"\");\n    setCountdown(300);\n    setTimerActive(false);\n    setConfirmNewPassword(\"\");\n  };\n  const closeSignUpModal = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setErrorMessage(\"Passwords do not match\");\n      return;\n    }\n    //regular expression that defines a string that as at least one of those symbols digits and over 8 characters long\n    const passwordRegex = /^(?=.*[0-9])(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]).{8,}$/;\n    if (!passwordRegex.test(password)) {\n      setErrorMessage(\"Password must be at least 8 characters long and include at least one number and one special character.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"https://api.zukini.com/account/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          Email: useremail,\n          Password: password,\n          Name: username\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n      if (data.success) {\n        setShowSignUpModal(false);\n      } else {\n        console.log(\"not success\");\n        setErrorMessage(data.message);\n        return;\n      }\n    } catch (error) {\n      console.log(\"Error signing up:\", error);\n    }\n    setErrorMessage(\"\");\n    setUserEmail(\"\");\n    setUserName(\"\");\n    setPassword(\"\");\n    setConfirmPassword(\"\");\n    alert(\"Account created successfully! Please check your email and click verification link.\");\n  };\n  const handleConfirmChangePassword = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmNewPassword) {\n      setErrorMessage(\"New passwords do not match\");\n      return;\n    }\n    try {\n      const response = await fetch(\"https://api.zukini.com/account/changepassword\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId,\n          oldPassword,\n          newPassword\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert(\"Password changed successfully!\");\n        setShowChangePasswordModal(false);\n        setOldPassword(\"\");\n        setNewPassword(\"\");\n        setConfirmNewPassword(\"\");\n      } else {\n        setErrorMessage(data.message);\n      }\n    } catch (error) {\n      console.log(\"Error changing password:\", error);\n      setErrorMessage(\"An error occurred while changing your password.\");\n    }\n  };\n  const handleSendCode = async e => {\n    e.preventDefault();\n    setErrorMessage(\"\");\n    try {\n      const response = await fetch(\"https://api.zukini.com/account/sendCode\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: useremail\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setIsCodeSent(true);\n        setCountdown(300); // Reset timer\n        setTimerActive(true);\n      } else {\n        setErrorMessage(data.message);\n      }\n    } catch (error) {\n      console.error(\"Error sending code:\", error);\n      setErrorMessage(\"Failed to send code. Try again.\");\n    }\n  };\n  const handleVerifyCode = async e => {\n    e.preventDefault();\n    setErrorMessage(\"\");\n    try {\n      const response = await fetch(\"https://api.zukini.com/account/verifyCode\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: useremail,\n          code: verificationCode\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert(\"Code verified successfully! Proceed to reset your password.\");\n        setShowForgotPasswordModal(false);\n        setVerificationCode(\"\");\n        setCountdown(300);\n        setTimerActive(false);\n        setIsCodeSent(false);\n      } else {\n        setErrorMessage(\"Invalid or expired code.\");\n      }\n    } catch (error) {\n      console.error(\"Error verifying code:\", error);\n      setErrorMessage(\"Failed to verify code.\");\n    }\n  };\n  const formatTime = seconds => {\n    const min = Math.floor(seconds / 60);\n    const sec = seconds % 60;\n    return `${min}:${sec < 10 ? \"0\" : \"\"}${sec}`;\n  };\n  const isGuestUser = userId && typeof userId === \"string\" && userId.startsWith(\"guest-\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account-wrapper\",\n    children: [userId && !isGuestUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logoutbutton\",\n        onClick: handleChangePassword,\n        children: [\"Change Password\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"arrow-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"arrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logoutbutton\",\n        onClick: handleLogout,\n        children: [\"Log Out\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"arrow-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"arrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"signupbutton\",\n        onClick: handleSignUp,\n        children: [\"Sign Up\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"arrow-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"arrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginbutton\",\n        onClick: handleLogIn,\n        children: [\"Log in\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"arrow-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"arrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `loginmodal-container ${showLoginModal ? \"show\" : \"\"}`,\n      children: showLoginModal && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"loginform\",\n        onSubmit: handleLoggedIn,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loginform-title\",\n          children: \"Sign in to your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logininput-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            required: true,\n            onChange: e => setUserEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logininput-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            required: true,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 25\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fgpasssignup-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fgpasssingupspan\",\n            onClick: handlegotosignup,\n            children: \"No account? Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fgpasssingupspan\",\n            onClick: handleforgotpassword,\n            children: \"Forgot password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authbuttonlogin-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-buttonclose\",\n            onClick: handleclose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-buttonsignin\",\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `loginmodal-container ${showSignUpModal ? \"show\" : \"\"}`,\n      children: showSignUpModal && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"signupform\",\n        onSubmit: closeSignUpModal,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"signupform-title\",\n          children: \"Create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signupinput-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter name\",\n            required: true,\n            onChange: e => setUserName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signupinput-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter email\",\n            required: true,\n            onChange: e => setUserEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signupinput-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            required: true,\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signupinput-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter password again\",\n            required: true,\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fgpasssignup-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fgpasssingupspan\",\n            onClick: handlegotologin,\n            children: \"Have an account? Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 25\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authbuttonlogin-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-buttonclose\",\n            onClick: handleclose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-buttonsignin\",\n            type: \"submit\",\n            children: \"Sign-Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `loginmodal-container ${showChangePasswordModal ? \"show\" : \"\"}`,\n      children: showChangePasswordModal && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"signupform\",\n        onSubmit: handleConfirmChangePassword,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"signupform-title\",\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signupinput-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter old password\",\n            required: true,\n            value: oldPassword,\n            onChange: e => setOldPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signupinput-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter new password\",\n            required: true,\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signupinput-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Confirm new password\",\n            required: true,\n            value: confirmNewPassword,\n            onChange: e => setConfirmNewPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 17\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authbuttonlogin-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-buttonclose\",\n            onClick: handleclose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-buttonsignin\",\n            type: \"submit\",\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `loginmodal-container ${showForgotPasswordModal ? \"show\" : \"\"}`,\n      children: showForgotPasswordModal && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"signupform\",\n        onSubmit: isCodeSent ? handleVerifyCode : handleSendCode,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"signupform-title\",\n          children: isCodeSent ? \"Enter Code\" : \"Enter Account Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signupinput-container\",\n          children: !isCodeSent ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter email\",\n            required: true,\n            value: useremail,\n            onChange: e => setUserEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter verification code\",\n              required: true,\n              value: verificationCode,\n              onChange: e => setVerificationCode(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"timer-text\",\n              children: [\"Code expires in: \", formatTime(countdown)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 25\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authbuttonlogin-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-buttonclose\",\n            onClick: handleclose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-buttonsignin\",\n            type: \"submit\",\n            children: isCodeSent ? \"Verify Code\" : \"Send Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 9\n  }, this);\n};\n_s(Authentication, \"3jQ3/UxQ6U5+f+iiEm5E5wpAcJk=\", false, function () {\n  return [useScan, useUser];\n});\n_c = Authentication;\nexport default Authentication;\nvar _c;\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"names":["useState","useEffect","useUser","useScan","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","Authentication","_s","setCurrentScan","userId","setUserId","setEmail","setTotalScans","setTotalFlashcards","setTotalMockTests","setName","showLoginModal","setShowLoginModal","showSignUpModal","setShowSignUpModal","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","useremail","setUserEmail","username","setUserName","showChangePasswordModal","setShowChangePasswordModal","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","showForgotPasswordModal","setShowForgotPasswordModal","isCodeSent","setIsCodeSent","verificationCode","setVerificationCode","countdown","setCountdown","timerActive","setTimerActive","interval","setInterval","prev","clearInterval","storedUserId","localStorage","getItem","storedEmail","storedName","handleSignUp","handleLogIn","handlegotosignup","handlegotologin","handleChangePassword","handleforgotpassword","handleLoggedIn","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","email","Email","Password","data","json","success","name","setItem","set","message","error","console","handleLogout","removeItem","newGuestId","sessionStorage","handleclose","closeSignUpModal","passwordRegex","test","Name","log","alert","handleConfirmChangePassword","handleSendCode","handleVerifyCode","code","formatTime","seconds","min","Math","floor","sec","isGuestUser","startsWith","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","required","onChange","target","value","_c","$RefreshReg$"],"sources":["/Users/anthonyli/react-noteletapp/frontend/src/authentication/Authentication.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useUser } from './UserContext';\nimport { useScan } from '../scans/ScanContext';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst Authentication = () => {\n    const { setCurrentScan } = useScan();\n    const { userId, setUserId, setEmail, setTotalScans, setTotalFlashcards, setTotalMockTests, setName} = useUser();\n    const [showLoginModal, setShowLoginModal] = useState(false);\n    const [showSignUpModal, setShowSignUpModal] = useState(false);\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [useremail, setUserEmail] = useState(\"\");\n    const [username, setUserName]= useState(\"\");\n    const [showChangePasswordModal, setShowChangePasswordModal] = useState(false);\n    const [oldPassword, setOldPassword] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\n    const [showForgotPasswordModal, setShowForgotPasswordModal] = useState(false);\n    const [isCodeSent, setIsCodeSent] = useState(false);\n    const [verificationCode, setVerificationCode] = useState(\"\");\n    const [countdown, setCountdown] = useState(300); // 5-minute timer (300s)\n    const [timerActive, setTimerActive] = useState(false);\n    \n    useEffect(() => {\n        if (timerActive && countdown > 0) {\n            const interval = setInterval(() => {\n                setCountdown((prev) => prev - 1);\n            }, 1000);\n            return () => clearInterval(interval);\n        }\n    }, [countdown, timerActive]);\n\n    useEffect(() => {\n        const storedUserId = localStorage.getItem(\"userId\");\n        const storedEmail = localStorage.getItem(\"email\");\n        const storedName = localStorage.getItem(\"name\");\n\n        if (storedUserId) setUserId(storedUserId);\n        if (storedEmail) setEmail(storedEmail);\n        if (storedName) setName(storedName)\n    }, []);\n    \n    const handleSignUp = () => {\n        setShowSignUpModal(true);\n        setErrorMessage(\"\");\n    };\n\n    const handleLogIn = () => {\n        setShowLoginModal(true);\n        setErrorMessage(\"\");\n    };\n    \n    const handlegotosignup = () => {\n        setShowLoginModal(false);\n        setShowSignUpModal(true);\n        setErrorMessage(\"\");\n    };\n    \n    const handlegotologin = () => {\n        setShowSignUpModal(false);\n        setShowLoginModal(true);\n        setErrorMessage(\"\");\n    };\n    \n    const handleChangePassword = () => {\n        setShowChangePasswordModal(true);\n        setErrorMessage(\"\");\n    };\n    \n    const handleforgotpassword = () => {\n        setShowLoginModal(false);\n        setShowForgotPasswordModal(true);\n        setErrorMessage(\"\");\n    };\n    \n\n    const handleLoggedIn = async (e) => {\n        e.preventDefault();\n        setErrorMessage(\"\");\n    \n        try {\n            let response;\n            if (isCodeSent) {\n                // If code is sent, verify and log in using the code\n                response = await fetch(\"https://api.zukini.com/account/loginforgotpass\", {\n                    method: \"POST\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({\n                        email: useremail\n                    }),\n                });\n            } else {\n                // Normal email/password login\n                response = await fetch(\"https://api.zukini.com/account/login\", {\n                    method: \"POST\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({\n                        Email: useremail,\n                        Password: password,\n                    }),\n                });\n            }\n    \n            const data = await response.json();\n    \n            if (data.success) {\n                setUserId(data.userId);\n                setEmail(data.email);\n                setName(data.name);\n                localStorage.setItem(\"userId\", data.userId);\n                localStorage.setItem(\"email\", data.email);\n                localStorage.setItem(\"name\", data.name);\n    \n                setShowLoginModal(false);\n                setShowForgotPasswordModal(false);\n                setIsCodeSent(false);\n                setVerificationCode(\"\");\n                setCountdown(300);\n                setTimerActive(false);\n                set\n                setPassword(\"\"); // Clear password field\n            } else {\n                setErrorMessage(data.message);\n            }\n        } catch (error) {\n            console.error(\"Error logging in:\", error);\n            setErrorMessage(\"Login failed. Please try again.\");\n        }\n    };\n    \n\n    const handleLogout = () => {\n        setCurrentScan(null);\n        localStorage.removeItem('currentScan');\n        const newGuestId = `guest-${uuidv4()}`;\n        sessionStorage.setItem(\"guestUserId\", newGuestId); // Store in session storage\n        setUserId(newGuestId); // Assign new guest ID instead of null\n        setEmail(null);\n        setName(null);\n        setTotalScans(0);\n        setTotalFlashcards(0);\n        setTotalMockTests(0);\n        localStorage.removeItem(\"userId\");\n        localStorage.removeItem(\"email\");\n        localStorage.removeItem(\"name\");\n    };\n    \n    const handleclose = (e) => {\n        e.preventDefault(); // Prevent form validation from triggering\n        setShowLoginModal(false);\n        setShowSignUpModal(false);\n        setShowChangePasswordModal(false);\n        setShowForgotPasswordModal(false);\n        setErrorMessage(\"\");\n        setUserEmail(\"\");\n        setUserName(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n        setOldPassword(\"\");\n        setNewPassword(\"\");\n        setIsCodeSent(false);\n        setVerificationCode(\"\");\n        setCountdown(300);\n        setTimerActive(false);\n        setConfirmNewPassword(\"\");\n    }\n\n    const closeSignUpModal = async (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            setErrorMessage(\"Passwords do not match\");\n            return;\n        }\n        //regular expression that defines a string that as at least one of those symbols digits and over 8 characters long\n        const passwordRegex = /^(?=.*[0-9])(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]).{8,}$/;\n    \n        if (!passwordRegex.test(password)) {\n            setErrorMessage(\"Password must be at least 8 characters long and include at least one number and one special character.\");\n            return;\n        }\n\n        try {\n            const response = await fetch(\"https://api.zukini.com/account/signup\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                    Email: useremail,\n                    Password: password,\n                    Name: username,\n                }),\n            });\n\n            const data = await response.json();\n            console.log(data);\n            if (data.success) {\n                setShowSignUpModal(false);\n            } else {\n                console.log(\"not success\");\n                setErrorMessage(data.message);\n                return\n            }\n        } catch (error) {\n            console.log(\"Error signing up:\", error);\n        }\n\n        setErrorMessage(\"\");\n        setUserEmail(\"\");\n        setUserName(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n        alert(\"Account created successfully! Please check your email and click verification link.\");\n    };\n    \n    const handleConfirmChangePassword = async (e) => {\n        e.preventDefault();\n        \n        if (newPassword !== confirmNewPassword) {\n            setErrorMessage(\"New passwords do not match\");\n            return;\n        }\n    \n        try {\n            const response = await fetch(\"https://api.zukini.com/account/changepassword\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                    userId,\n                    oldPassword,\n                    newPassword,\n                }),\n            });\n    \n            const data = await response.json();\n    \n            if (data.success) {\n                alert(\"Password changed successfully!\");\n                setShowChangePasswordModal(false);\n                setOldPassword(\"\");\n                setNewPassword(\"\");\n                setConfirmNewPassword(\"\");\n            } else {\n                setErrorMessage(data.message);\n            }\n        } catch (error) {\n            console.log(\"Error changing password:\", error);\n            setErrorMessage(\"An error occurred while changing your password.\");\n        }\n    };\n    \n    const handleSendCode = async (e) => {\n        e.preventDefault();\n        setErrorMessage(\"\");\n    \n        try {\n            const response = await fetch(\"https://api.zukini.com/account/sendCode\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ email: useremail }),\n            });\n    \n            const data = await response.json();\n    \n            if (data.success) {\n                setIsCodeSent(true);\n                setCountdown(300); // Reset timer\n                setTimerActive(true);\n            } else {\n                setErrorMessage(data.message);\n            }\n        } catch (error) {\n            console.error(\"Error sending code:\", error);\n            setErrorMessage(\"Failed to send code. Try again.\");\n        }\n    };\n    \n    const handleVerifyCode = async (e) => {\n        e.preventDefault();\n        setErrorMessage(\"\");\n    \n        try {\n            const response = await fetch(\"https://api.zukini.com/account/verifyCode\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ email: useremail, code: verificationCode }),\n            });\n    \n            const data = await response.json();\n    \n            if (data.success) {\n                alert(\"Code verified successfully! Proceed to reset your password.\");\n                setShowForgotPasswordModal(false);\n                setVerificationCode(\"\");\n                setCountdown(300);\n                setTimerActive(false);\n                setIsCodeSent(false);\n            } else {\n                setErrorMessage(\"Invalid or expired code.\");\n            }\n        } catch (error) {\n            console.error(\"Error verifying code:\", error);\n            setErrorMessage(\"Failed to verify code.\");\n        }\n    };\n    \n    const formatTime = (seconds) => {\n        const min = Math.floor(seconds / 60);\n        const sec = seconds % 60;\n        return `${min}:${sec < 10 ? \"0\" : \"\"}${sec}`;\n    };\n    \n    \n    \n    const isGuestUser = userId && typeof userId === \"string\" && userId.startsWith(\"guest-\");\n\n    return (\n        <div className=\"account-wrapper\">\n            {userId && !isGuestUser? (\n                <>\n                <button className=\"logoutbutton\" onClick={handleChangePassword}>\n                    Change Password\n                    <div className=\"arrow-wrapper\">\n                        <div className=\"arrow\"></div>\n                    </div>\n                </button>\n                \n                <button className=\"logoutbutton\" onClick={handleLogout}>\n                    Log Out\n                    <div className=\"arrow-wrapper\">\n                        <div className=\"arrow\"></div>\n                    </div>\n                </button>\n                </>\n            ) : (\n                <>\n                    <button className=\"signupbutton\" onClick={handleSignUp}>Sign Up \n                        <div className=\"arrow-wrapper\">\n                            <div className=\"arrow\"></div>\n                        </div>\n                    </button>\n                    <button className=\"loginbutton\" onClick={handleLogIn}>Log in \n                        <div className=\"arrow-wrapper\">\n                            <div className=\"arrow\"></div>\n                        </div>\n                    </button>\n                </>\n            )}\n\n            {/* Login Modal */}\n            <div className={`loginmodal-container ${showLoginModal ? \"show\" : \"\"}`}>\n                {showLoginModal && (\n                    <form className=\"loginform\" onSubmit={handleLoggedIn}>\n                        <p className=\"loginform-title\">Sign in to your account</p>\n                        <div className=\"logininput-container\">\n                            <input type=\"email\" placeholder=\"Enter email\" required onChange={(e) => setUserEmail(e.target.value)} />\n                        </div>\n                        <div className=\"logininput-container\">\n                            <input type=\"password\" placeholder=\"Enter password\" required onChange={(e) => setPassword(e.target.value)} />\n                        </div>\n                        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n                        <div className=\"fgpasssignup-wrapper\">\n                            <span className=\"fgpasssingupspan\" onClick={handlegotosignup}>No account? Sign up</span>\n                            <span className=\"fgpasssingupspan\" onClick={handleforgotpassword}>Forgot password?</span>\n                            \n                        </div>\n                        <div className=\"authbuttonlogin-wrapper\">\n                            <button\n                            className=\"login-buttonclose\"\n                            onClick={handleclose}\n                            >\n                            Close\n                            </button>\n                            <button\n                            className=\"login-buttonsignin\"\n                            type=\"submit\"\n                            >\n                            Login\n                            </button>\n                        </div>\n                    </form>\n                )}\n            </div>\n\n            {/* Signup Modal */}\n            <div className={`loginmodal-container ${showSignUpModal ? \"show\" : \"\"}`}>\n                {showSignUpModal && (\n                    <form className=\"signupform\" onSubmit={closeSignUpModal}>\n                        <p className=\"signupform-title\">Create an account</p>\n                        <div className=\"signupinput-container\">\n                            <input type=\"text\" placeholder=\"Enter name\" required onChange={(e) => setUserName(e.target.value)} />\n                        </div>\n                        <div className=\"signupinput-container\">\n                            <input type=\"text\" placeholder=\"Enter email\" required onChange={(e) => setUserEmail(e.target.value)} />\n                        </div>\n                        \n                        <div className=\"signupinput-container\">\n                            <input type=\"password\" placeholder=\"Enter password\" required value={password} onChange={(e) => setPassword(e.target.value)} />\n                        </div>\n                        <div className=\"signupinput-container\">\n                            <input type=\"password\" placeholder=\"Enter password again\" required value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\n                        </div>\n                        \n                        <div className=\"fgpasssignup-wrapper\">\n                            <span className=\"fgpasssingupspan\" onClick={handlegotologin}>Have an account? Log in</span>\n                            \n                        </div>\n                        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n                        <div className=\"authbuttonlogin-wrapper\">\n                            <button\n                            className=\"login-buttonclose\"\n                            onClick={handleclose}\n                            >\n                            Close\n                            </button>\n                            <button\n                            className=\"login-buttonsignin\"\n                            type=\"submit\"\n                            >\n                            Sign-Up\n                            </button>\n                        </div>\n                    </form>\n                )}\n            </div>\n            <div className={`loginmodal-container ${showChangePasswordModal ? \"show\" : \"\"}`}>\n            {showChangePasswordModal && (\n            <form className=\"signupform\" onSubmit={handleConfirmChangePassword}>\n                <p className=\"signupform-title\">Change Password</p>\n                <div className=\"signupinput-container\">\n                    <input \n                        type=\"password\" \n                        placeholder=\"Enter old password\" \n                        required \n                        value={oldPassword} \n                        onChange={(e) => setOldPassword(e.target.value)} \n                    />\n                </div>\n                <div className=\"signupinput-container\">\n                    <input \n                        type=\"password\" \n                        placeholder=\"Enter new password\" \n                        required \n                        value={newPassword} \n                        onChange={(e) => setNewPassword(e.target.value)} \n                    />\n                </div>\n                <div className=\"signupinput-container\">\n                    <input \n                        type=\"password\" \n                        placeholder=\"Confirm new password\" \n                        required \n                        value={confirmNewPassword} \n                        onChange={(e) => setConfirmNewPassword(e.target.value)} \n                    />\n                </div>\n                {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n                <div className=\"authbuttonlogin-wrapper\">\n                    <button className=\"login-buttonclose\" onClick={handleclose}>\n                        Close\n                    </button>\n                    <button className=\"login-buttonsignin\" type=\"submit\">\n                        Confirm\n                    </button>\n                </div>  \n            </form>\n            \n            )}\n            </div>\n            \n            <div className={`loginmodal-container ${showForgotPasswordModal ? \"show\" : \"\"}`}>\n                    {showForgotPasswordModal && (\n                    <form className=\"signupform\" onSubmit={isCodeSent ? handleVerifyCode : handleSendCode}>\n                        <p className=\"signupform-title\">{isCodeSent ? \"Enter Code\" : \"Enter Account Email\"}</p>\n\n                        <div className=\"signupinput-container\">\n                            {!isCodeSent ? (\n                                <input type=\"text\" placeholder=\"Enter email\" required value={useremail} onChange={(e) => setUserEmail(e.target.value)} />\n                            ) : (\n                                <>\n                                    <input type=\"text\" placeholder=\"Enter verification code\" required value={verificationCode} onChange={(e) => setVerificationCode(e.target.value)} />\n                                    <p className=\"timer-text\">Code expires in: {formatTime(countdown)}</p>\n                                </>\n                            )}\n                        </div>\n\n                        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n                        <div className=\"authbuttonlogin-wrapper\">\n                            <button className=\"login-buttonclose\" onClick={handleclose}>\n                                Close\n                            </button>\n                            <button className=\"login-buttonsignin\" type=\"submit\">\n                                {isCodeSent ? \"Verify Code\" : \"Send Code\"}\n                            </button>\n                        </div>\n                    </form>\n                )}\n            </div>\n\n        </div>\n    );\n};\n\nexport default Authentication;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}