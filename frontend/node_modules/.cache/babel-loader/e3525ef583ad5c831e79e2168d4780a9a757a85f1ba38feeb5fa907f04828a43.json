{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyli/react-noteletapp/frontend/src/scans/AddScan.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useUser } from '../authentication/UserContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddScan = ({\n  onAddScan,\n  scrollToTop,\n  slidesRef\n}) => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [parsedText, setParsedText] = useState(\"\");\n  const [currFile, setCurrFile] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [displayedText, setDisplayedText] = useState(\"\");\n  const fileInputRef = useRef(null);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isLoading, setisLoading] = useState(false);\n  const [currDate, setCurrDate] = useState(\"\");\n  const [scanName, setScanName] = useState(\"\");\n  const {\n    userId\n  } = useUser();\n  const handleFileChange = async e => {\n    e.preventDefault();\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    if (!selectedFile) return;\n    setErrorMessage(\"\");\n    await handleSubmit(selectedFile);\n    fileInputRef.current.value = \"\";\n  };\n  const handleScanNameChange = e => {\n    setScanName(e.target.value); // Update scan name state\n    if (scanName.length !== 0) {\n      setErrorMessage(\"\");\n    }\n  };\n  const handleSubmit = async selectedFile => {\n    if (!scanName) {\n      setErrorMessage(\"Please enter a scan name\");\n      return;\n    }\n    setisLoading(true);\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      // Step 1: Upload the file\n      const parseResponse = await fetch('https://api.zukini.com/scans/callparse', {\n        method: 'POST',\n        body: formData // Send file directly\n      });\n      const parseResult = await parseResponse.json();\n      // Get the file path from the upload response\n      setCurrDate(parseResult.date);\n      setCurrFile(parseResult.filePath);\n      setParsedText(parseResult.text); // Update the parsed text\n      setShowModal(true); // Show modal with parsed text\n\n      console.log('File parsed successfully:');\n    } catch (error) {\n      console.error('Error in handleSubmit:', error);\n    }\n  };\n  const handleCloseModal = () => {\n    setDisplayedText(\"\");\n    setisLoading(false);\n    setShowModal(false);\n  };\n  const handleReScan = async () => {\n    setShowModal(false);\n    console.log(\"in rescan\");\n    const fileToRescan = file;\n    if (!fileToRescan) {\n      console.error(\"No file available for re-scan\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', fileToRescan);\n    try {\n      const parseResponse = await fetch('https://18.236.227.203:5002/callparse', {\n        method: 'POST',\n        body: formData // Send filePath as JSON\n      });\n      if (!parseResponse.ok) {\n        throw new Error('Failed to re-scan the file');\n      }\n      const parseResult = await parseResponse.json();\n      setDisplayedText(\"\"); // Clear displayed text for re-animation\n      // Clear previous displayed text\n      setParsedText(parseResult.text); // Update the parsed text\n      console.log(parseResult.text);\n      setShowModal(true);\n    } catch (error) {\n      console.error('Error during re-scan:', error);\n    }\n  };\n  const onsave = async () => {\n    try {\n      if (parsedText.length === 0) {\n        setErrorMessage(\"Please upload a file\");\n        return;\n      }\n\n      // Prepare the data as JSON\n      const key = uuidv4();\n      console.log(\"currkey\", key);\n      const payload = {\n        scankey: key,\n        filePath: currFile,\n        // Send the current file path\n        scanName,\n        parsedText,\n        // Send the parsed text\n        currDate,\n        userId: userId\n      };\n\n      // Sending the POST request with JSON\n      const onsaveresponse = await fetch('http://18.236.227.203:5002/saveandexit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json' // Specify JSON content type\n        },\n        body: JSON.stringify(payload) // Convert the payload to JSON\n      });\n      if (onsaveresponse.ok) {\n        if (onAddScan) {\n          onAddScan({\n            scankey: key,\n            filepath: currFile,\n            scanname: scanName,\n            value: parsedText,\n            date: currDate,\n            userId: userId\n          });\n        }\n\n        // Clear form data and states\n        setShowModal(false);\n        setParsedText(\"\"); // Reset parsed text **after** modal is closed\n        setCurrFile(\"\");\n        setScanName(\"\");\n        setFile(null);\n        setDisplayedText(\"\");\n        scrolltoTop();\n        if (fileInputRef.current) {\n          fileInputRef.current.value = \"\"; // Clear the file input field visually\n        }\n      } else {\n        console.error('Failed to save data');\n      }\n      console.log(\"made it\");\n    } catch (error) {\n      console.error('Error during saving:', error);\n    }\n  };\n  useEffect(() => {\n    if (showModal && parsedText.trim() !== \"\") {\n      console.log(showModal, parsedText);\n      const words = parsedText.split(\" \");\n      let currentIndex = -1; // Start at -1 to include the first word\n\n      const interval = setInterval(() => {\n        currentIndex++; // Move index before using it\n\n        if (currentIndex < words.length) {\n          setDisplayedText(prev => prev ? `${prev} ${words[currentIndex]}` : words[currentIndex]);\n        } else {\n          clearInterval(interval); // Stop when all words are displayed\n        }\n      }, 50);\n    }\n  }, [showModal, parsedText]);\n  const scrolltoTop = () => {\n    scrollToTop();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: el => slidesRef.current[1] = el,\n      className: \"addscanpagecontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"scans-title\",\n        children: \"Create New Scan:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => e.preventDefault(),\n        encType: \"multipart/form-data\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Uploadscancontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addscannameinput\",\n            id: \"scanName\",\n            value: scanName,\n            onChange: handleScanNameChange,\n            placeholder: \"Enter scan name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"hiddenfileinput\",\n            type: \"file\",\n            accept: \"image/*,application/pdf\",\n            onChange: handleFileChange,\n            ref: fileInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"fileinput\",\n            onClick: () => fileInputRef.current.click(),\n            children: [\"Upload and Scan\", isLoading && /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"loading-svg\",\n              viewBox: \"25 25 50 50\",\n              children: /*#__PURE__*/_jsxDEV(\"circle\", {\n                className: \"loadingcircle\",\n                cx: \"50\",\n                cy: \"50\",\n                r: \"20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"fileinput\",\n            type: \"button\",\n            onClick: onsave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 9\n          }, this), errorMessage.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errormessage\",\n            children: /*#__PURE__*/_jsxDEV(\"text\", {\n              children: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addscanwrap\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"gobackbutton\",\n          onClick: scrolltoTop,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"svgIcon\",\n            viewBox: \"0 0 384 512\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M214.6 41.4c-12.5-12.5-32.8-12.5-45.3 0l-160 160c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L160 141.2V448c0 17.7 14.3 32 32 32s32-14.3 32-32V141.2L329.4 246.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3l-160-160z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `parsedTextmodal-container ${showModal ? \"show\" : \"\"}`,\n      children: showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parsedText-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-title\",\n          children: \"Parsed Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"parsedTextcontent\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"parsedText-para\",\n            children: displayedText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"parsedTextmodal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"deleteWarn-buttoncancel\",\n            onClick: handleCloseModal,\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"deleteWarn-buttoncancel\",\n            onClick: handleReScan,\n            children: \"Re-Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(AddScan, \"XQswO71lJS4zZ3pg+ElCaeaN41Y=\", false, function () {\n  return [useUser];\n});\n_c = AddScan;\nexport default AddScan;\nvar _c;\n$RefreshReg$(_c, \"AddScan\");","map":{"version":3,"names":["useState","useEffect","useRef","v4","uuidv4","useUser","jsxDEV","_jsxDEV","Fragment","_Fragment","AddScan","onAddScan","scrollToTop","slidesRef","_s","showModal","setShowModal","parsedText","setParsedText","currFile","setCurrFile","file","setFile","displayedText","setDisplayedText","fileInputRef","errorMessage","setErrorMessage","isLoading","setisLoading","currDate","setCurrDate","scanName","setScanName","userId","handleFileChange","e","preventDefault","selectedFile","target","files","handleSubmit","current","value","handleScanNameChange","length","formData","FormData","append","parseResponse","fetch","method","body","parseResult","json","date","filePath","text","console","log","error","handleCloseModal","handleReScan","fileToRescan","ok","Error","onsave","key","payload","scankey","onsaveresponse","headers","JSON","stringify","filepath","scanname","scrolltoTop","trim","words","split","currentIndex","interval","setInterval","prev","clearInterval","children","ref","el","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","encType","type","id","onChange","placeholder","accept","onClick","click","viewBox","cx","cy","r","d","_c","$RefreshReg$"],"sources":["/Users/anthonyli/react-noteletapp/frontend/src/scans/AddScan.js"],"sourcesContent":["import {useState, useEffect, useRef} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useUser } from '../authentication/UserContext';\n\n\nconst AddScan = ({onAddScan, scrollToTop, slidesRef})  => {\n    const [showModal, setShowModal] = useState(false);\n    const [parsedText, setParsedText] = useState(\"\");\n    const [currFile, setCurrFile] = useState(\"\");\n    const [file, setFile] = useState(null);\n    const [displayedText, setDisplayedText] = useState(\"\");\n    const fileInputRef = useRef(null);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [isLoading, setisLoading] = useState(false);\n    const [currDate, setCurrDate] = useState(\"\");\n    const [scanName, setScanName] = useState(\"\");\n    const { userId } = useUser();\n        \n    const handleFileChange = async (e) => {\n        \n        e.preventDefault();\n        const selectedFile = e.target.files[0];\n        setFile(selectedFile);\n        if (!selectedFile) return;\n        setErrorMessage(\"\");\n        await handleSubmit(selectedFile);\n        fileInputRef.current.value = \"\";\n\n    };\n    \n      \n    const handleScanNameChange = (e) => {\n      setScanName(e.target.value); // Update scan name state\n      if (scanName.length !== 0) {\n        setErrorMessage(\"\");\n      }\n    };\n    \n    const handleSubmit = async (selectedFile) => {\n      if (!scanName) {\n        setErrorMessage(\"Please enter a scan name\");\n        return;\n      }\n      setisLoading(true);\n    \n      const formData = new FormData();\n      formData.append('file', selectedFile);\n    \n      try {\n        // Step 1: Upload the file\n        const parseResponse = await fetch('https://api.zukini.com/scans/callparse', {\n            method: 'POST',\n            body: formData, // Send file directly\n        });\n        const parseResult = await parseResponse.json();\n        // Get the file path from the upload response\n        setCurrDate(parseResult.date);\n        setCurrFile(parseResult.filePath);\n        setParsedText(parseResult.text); // Update the parsed text\n        setShowModal(true); // Show modal with parsed text\n    \n        console.log('File parsed successfully:');\n      } catch (error) {\n        console.error('Error in handleSubmit:', error);\n      }\n    };\n    \n    \n    const handleCloseModal = () => {\n        setDisplayedText(\"\");\n        setisLoading(false);\n        setShowModal(false);\n    };\n\n    const handleReScan = async () => {\n      setShowModal(false);\n      console.log(\"in rescan\");\n      const fileToRescan = file \n      \n      if (!fileToRescan) {\n        console.error(\"No file available for re-scan\");\n        return;\n      }\n      const formData = new FormData();\n      formData.append('file', fileToRescan); \n      try {\n        const parseResponse = await fetch('https://18.236.227.203:5002/callparse', {\n          method: 'POST',\n          body: formData, // Send filePath as JSON\n        });\n    \n        if (!parseResponse.ok) {\n          throw new Error('Failed to re-scan the file');\n        }\n    \n        const parseResult = await parseResponse.json();\n        setDisplayedText(\"\"); // Clear displayed text for re-animation\n        // Clear previous displayed text\n        setParsedText(parseResult.text); // Update the parsed text\n        console.log(parseResult.text);\n        setShowModal(true);\n      } catch (error) {\n        console.error('Error during re-scan:', error);\n      }\n    };\n\n    \n    const onsave = async () => {\n      try {\n        if (parsedText.length === 0) {\n            setErrorMessage(\"Please upload a file\");\n            return;\n        }\n        \n        // Prepare the data as JSON\n        const key = uuidv4();\n        console.log(\"currkey\", key);\n        const payload = {\n          scankey: key,\n          filePath: currFile, // Send the current file path\n          scanName,\n          parsedText, // Send the parsed text\n          currDate,\n          userId: userId,\n          \n        };\n    \n        // Sending the POST request with JSON\n        const onsaveresponse = await fetch('http://18.236.227.203:5002/saveandexit', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json', // Specify JSON content type\n          },\n          body: JSON.stringify(payload), // Convert the payload to JSON\n        });\n        if (onsaveresponse.ok) {\n          if (onAddScan) {\n            onAddScan({\n              scankey: key,\n              filepath: currFile,\n              scanname: scanName,\n              value: parsedText,\n              date: currDate,\n              userId: userId,\n            });\n          }\n    \n          // Clear form data and states\n          setShowModal(false);\n\n          \n          setParsedText(\"\"); // Reset parsed text **after** modal is closed\n          setCurrFile(\"\");\n          setScanName(\"\");\n          setFile(null);\n          setDisplayedText(\"\");\n          scrolltoTop();\n\n              \n          if (fileInputRef.current) {\n            fileInputRef.current.value = \"\"; // Clear the file input field visually\n          }\n        } else {\n          console.error('Failed to save data');\n        }\n        console.log(\"made it\");\n        \n      } catch (error) {\n        console.error('Error during saving:', error);\n      }\n    \n    };\n    \n\n    useEffect(() => {\n        if (showModal && parsedText.trim() !== \"\") {\n            console.log(showModal, parsedText);\n            const words = parsedText.split(\" \");\n            let currentIndex = -1; // Start at -1 to include the first word\n    \n            const interval = setInterval(() => {\n                currentIndex++; // Move index before using it\n    \n                if (currentIndex < words.length) {\n                    setDisplayedText((prev) =>\n                        prev ? `${prev} ${words[currentIndex]}` : words[currentIndex]\n                    );\n                } else {\n                    clearInterval(interval); // Stop when all words are displayed\n                }\n            }, 50);\n      }\n  }, [showModal, parsedText]);\n  \n  \n  const scrolltoTop = () => {\n    scrollToTop();\n  };\n    \n  return (\n    <>\n    <div ref={(el) => slidesRef.current[1] = el} className =\"addscanpagecontainer\" >\n        <p className='scans-title'>Create New Scan:</p>\n        <form onSubmit={(e) => e.preventDefault()} encType=\"multipart/form-data\">\n        <div className=\"Uploadscancontainer\">\n        <input\n        type=\"text\"\n        className=\"addscannameinput\"\n        id=\"scanName\"\n        value={scanName}\n        onChange={handleScanNameChange}\n        placeholder=\"Enter scan name\"\n        />\n        <input\n          className=\"hiddenfileinput\"\n          type=\"file\"\n          accept=\"image/*,application/pdf\" \n          onChange={handleFileChange}\n          ref={fileInputRef}\n        ></input>\n        \n        {/*we use file input ref to hide the ugly default file upload button, so when we do onclick it activates the file input ref which is the ref of the input form \n         then once a file is changed or that state changes we automatically try to parse */}\n        <button type=\"button\" className=\"fileinput\" onClick={() => fileInputRef.current.click() } >\n            Upload and Scan\n            {isLoading && (\n                <svg className=\"loading-svg\" viewBox=\"25 25 50 50\">\n                <circle className=\"loadingcircle\" cx=\"50\" cy=\"50\" r=\"20\"></circle>\n              </svg>\n            )}\n        </button>\n\n        \n        <button className=\"fileinput\" type=\"button\" onClick={onsave} >Save</button>\n        \n        {errorMessage.length > 0 && (\n            <div className=\"errormessage\"> \n                <text>{errorMessage}</text>\n            </div>\n        )}\n        \n        </div>\n       </form>\n       \n       <div className=\"addscanwrap\">\n       <button className=\"gobackbutton\" onClick={scrolltoTop}>\n                <svg className=\"svgIcon\" viewBox=\"0 0 384 512\">\n                    <path\n                    d=\"M214.6 41.4c-12.5-12.5-32.8-12.5-45.3 0l-160 160c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L160 141.2V448c0 17.7 14.3 32 32 32s32-14.3 32-32V141.2L329.4 246.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3l-160-160z\"\n                    ></path>\n                </svg>\n            </button>\n\n        </div>\n      </div>\n      \n  \n      \n    <div className={`parsedTextmodal-container ${showModal ? \"show\" : \"\"}`}>\n    {showModal && (\n    <div className=\"parsedText-modal\">\n      <p className=\"modal-title\">Parsed Text:</p>\n      <div className=\"parsedTextcontent\"> \n        <p className=\"parsedText-para\">{displayedText}</p>\n      </div>\n      <div className=\"parsedTextmodal-footer\">\n        <button\n          className=\"deleteWarn-buttoncancel\"\n          onClick={handleCloseModal}\n        >\n          Accept\n        </button>\n        <button\n          className=\"deleteWarn-buttoncancel\"\n          onClick={handleReScan}\n        >\n          Re-Scan\n        </button>\n      </div>\n    </div>\n  )}\n</div>\n\n    </>\n  );\n  \n};\n  \n\nexport default AddScan;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}