{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyli/react-noteletapp/frontend/src/scans/ScanList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Scan from './Scan';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScanList = ({\n  scans,\n  onDelete,\n  scroll,\n  slidesRef\n}) => {\n  _s();\n  const [startIndex, setStartIndex] = useState(0);\n  const [isFading, setIsFading] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [itemsPerView, setItemsPerView] = useState(window.innerWidth < 768 ? 1 : 2);\n  const [scanName, setScanName] = useState(\"\");\n  const [viewAll, setShowViewAll] = useState(false);\n  const scrollDelay = 7000; // Adjust this value to change delay time\n\n  // Handle window resize to adjust `itemsPerView` uses event listenrr to detect screen change\n  useEffect(() => {\n    const handleResize = () => {\n      setItemsPerView(window.innerWidth < 768 ? 1 : 2);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [itemsPerView]);\n\n  //for searching, baased on if the input field is clear or not\n  useEffect(() => {\n    if (scanName.trim() !== \"\") {\n      setIsPaused(true); // Stop auto-scrolling while searching\n    } else {\n      setIsPaused(false); // Resume scrolling when input is cleared\n    }\n  }, [scanName]);\n  useEffect(() => {\n    if (scans.length > 0 && startIndex >= scans.length) {\n      setStartIndex(0);\n    }\n  }, [scans, startIndex]);\n  useEffect(() => {\n    if (isPaused) return; // If paused, do not update\n    if (scans.length < 3) return;\n    const interval = setInterval(() => {\n      console.log(itemsPerView);\n      setIsFading(true); // Start fade-out effect\n      setTimeout(() => {\n        setStartIndex(prevIndex => prevIndex + itemsPerView >= scans.length ? 0 : prevIndex + itemsPerView);\n        setIsFading(false); // Start fade-in effect\n      }, 1000); // 1s fade transition\n    }, scrollDelay);\n    return () => clearInterval(interval); // Cleanup previous interval\n  }, [scans, scrollDelay, isPaused, itemsPerView]);\n  const filteredScans = scans.filter(scan => scan.scanname.toLowerCase().includes(scanName.toLowerCase()));\n  const displayedScans = scanName.trim() ? filteredScans.slice(0, itemsPerView) // Show all filtered scans when searching\n  : scans.slice(startIndex, startIndex + itemsPerView);\n  const scrolltoNext = () => {\n    scroll();\n  };\n  const viewall = () => {\n    setShowViewAll(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: el => slidesRef.current[0] = el,\n    className: \"scanpagecontainer\",\n    onMouseEnter: () => setIsPaused(true),\n    onMouseLeave: () => scanName.trim() === \"\" && setIsPaused(false),\n    onTouchStart: () => setIsPaused(true) // Pause scrolling on touch (Mobile)\n    ,\n    onTouchEnd: () => scanName.trim() === \"\" && setIsPaused(false) // Resume scrolling on release (Mobile)\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanheaderwrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"scans-title\",\n        children: \"Scans:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"viewall-button\",\n        onClick: viewall,\n        children: \"View All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"scansnameinput\",\n        value: scanName,\n        onChange: e => setScanName(e.target.value),\n        placeholder: \"Search scans....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `scan-list ${isFading ? 'fade' : ''}`,\n      children: displayedScans.length > 0 ? displayedScans.map(scan => /*#__PURE__*/_jsxDEV(Scan, {\n        scankey: scan.scankey,\n        filepath: scan.filepath,\n        scanname: scan.scanname,\n        text: scan.value,\n        date: scan.date,\n        onDelete: onDelete\n      }, scan.scankey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"nosearch\",\n        children: \"No scans found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this) // Message if no results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addscanwrap\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"addscan-button\",\n        onClick: scrolltoNext,\n        children: \"Add A Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(ScanList, \"/S2GqBY15ZLvxb6dW5p2aFxG0UI=\");\n_c = ScanList;\nexport default ScanList;\nvar _c;\n$RefreshReg$(_c, \"ScanList\");","map":{"version":3,"names":["React","useEffect","useState","Scan","jsxDEV","_jsxDEV","ScanList","scans","onDelete","scroll","slidesRef","_s","startIndex","setStartIndex","isFading","setIsFading","isPaused","setIsPaused","itemsPerView","setItemsPerView","window","innerWidth","scanName","setScanName","viewAll","setShowViewAll","scrollDelay","handleResize","addEventListener","removeEventListener","trim","length","interval","setInterval","console","log","setTimeout","prevIndex","clearInterval","filteredScans","filter","scan","scanname","toLowerCase","includes","displayedScans","slice","scrolltoNext","viewall","ref","el","current","className","onMouseEnter","onMouseLeave","onTouchStart","onTouchEnd","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","placeholder","map","scankey","filepath","text","date","_c","$RefreshReg$"],"sources":["/Users/anthonyli/react-noteletapp/frontend/src/scans/ScanList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Scan from './Scan';\n\nconst ScanList = ({ scans, onDelete, scroll, slidesRef}) => {\n    const [startIndex, setStartIndex] = useState(0);\n    const [isFading, setIsFading] = useState(false);\n    const [isPaused, setIsPaused] = useState(false);\n    const [itemsPerView, setItemsPerView] = useState(window.innerWidth < 768 ? 1 : 2); \n    const [scanName, setScanName] = useState(\"\");\n    const [viewAll, setShowViewAll] = useState(false);\n\n    const scrollDelay = 7000; // Adjust this value to change delay time\n    \n     // Handle window resize to adjust `itemsPerView` uses event listenrr to detect screen change\n     useEffect(() => {\n        const handleResize = () => {\n            setItemsPerView(window.innerWidth < 768 ? 1 : 2);\n        };\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, [itemsPerView]);\n    \n    //for searching, baased on if the input field is clear or not\n    useEffect(() => {\n        if (scanName.trim() !== \"\") {\n            setIsPaused(true); // Stop auto-scrolling while searching\n        } else {\n            setIsPaused(false); // Resume scrolling when input is cleared\n        }\n    }, [scanName]);\n    \n    useEffect(() => {\n        if (scans.length > 0 && startIndex >= scans.length) {\n            setStartIndex(0); \n        }\n    }, [scans, startIndex]);\n\n    useEffect(() => {\n        if (isPaused) return; // If paused, do not update\n        if (scans.length < 3) return;\n\n        const interval = setInterval(() => {\n            console.log(itemsPerView);\n            setIsFading(true); // Start fade-out effect\n            setTimeout(() => {\n                setStartIndex((prevIndex) =>\n                    prevIndex + itemsPerView >= scans.length ? 0 : prevIndex + itemsPerView\n                );\n                setIsFading(false); // Start fade-in effect\n            }, 1000); // 1s fade transition\n        }, scrollDelay);\n\n        return () => clearInterval(interval); // Cleanup previous interval\n    }, [scans, scrollDelay, isPaused, itemsPerView]); \n    \n    const filteredScans = scans.filter(scan => \n        scan.scanname.toLowerCase().includes(scanName.toLowerCase())\n    );\n    \n    const displayedScans = scanName.trim() \n        ? filteredScans.slice(0, itemsPerView)// Show all filtered scans when searching\n        : scans.slice(startIndex, startIndex + itemsPerView);\n    \n    const scrolltoNext = () => {\n        scroll();\n        \n    };\n    \n    const viewall = () => {\n        setShowViewAll(true);\n    }\n    \n    return (\n        <div ref={(el) => slidesRef.current[0] = el} className=\"scanpagecontainer\"\n        onMouseEnter={() => setIsPaused(true)}  \n        onMouseLeave={() => scanName.trim() === \"\" && setIsPaused(false)}\n        onTouchStart={() => setIsPaused(true)}  // Pause scrolling on touch (Mobile)\n        onTouchEnd={() => scanName.trim() === \"\" && setIsPaused(false)} // Resume scrolling on release (Mobile)\n        > \n            <div className=\"scanheaderwrapper\">\n            <p className=\"scans-title\">Scans:</p>\n            <button className= \"viewall-button\" onClick={viewall} >View All</button>\n            <input className=\"scansnameinput\" value={scanName}  onChange={(e) => setScanName(e.target.value)} placeholder=\"Search scans....\"></input>\n            </div>\n            <div className={`scan-list ${isFading ? 'fade' : ''}`}>\n                {displayedScans.length > 0 ? (\n                    displayedScans.map((scan) => (\n                        <Scan\n                            key={scan.scankey}\n                            scankey={scan.scankey}\n                            filepath={scan.filepath}\n                            scanname={scan.scanname}\n                            text={scan.value}\n                            date={scan.date}\n                            onDelete={onDelete}\n                        />\n                    ))\n                ) : (\n                    <p className=\"nosearch\">No scans found.</p> // Message if no results\n                )}\n            </div>\n            <div className=\"addscanwrap\">\n                <button className=\"addscan-button\" onClick={scrolltoNext}>Add A Scan</button>\n                \n            </div>\n        </div>\n    );\n};\n\nexport default ScanList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}