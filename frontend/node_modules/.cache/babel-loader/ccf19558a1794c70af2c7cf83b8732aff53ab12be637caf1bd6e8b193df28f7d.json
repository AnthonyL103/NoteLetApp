{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyli/react-noteletapp/frontend/src/pages/FilesPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport ScanList from '../scans/ScanList.js';\nimport { useUser } from '../authentication/UserContext';\nimport AddScan from '../scans/AddScan';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilesPage = () => {\n  _s();\n  const [scans, setScans] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [scanToDelete, setScanToDelete] = useState(null);\n  const {\n    userId,\n    setTotalScans\n  } = useUser();\n  const slidesRef = useRef([]);\n  useEffect(() => {\n    const fetchScans = async () => {\n      try {\n        const response = await fetch(`https://api.zukini.com/display/displayscans?userId=${userId}`);\n        ;\n        if (!response.ok) {\n          throw new Error('Failed to fetch scans');\n        }\n        const data = await response.json();\n        console.log('Fetched scans:', data);\n        setScans(data);\n      } catch (error) {\n        console.error('Error fetching scans:', error);\n      }\n    };\n    fetchScans();\n  }, [userId]);\n  const displayModal = key => {\n    setScanToDelete(key); // Set the scan to delete\n    //console.log(\" reckey\",key);\n    setShowModal(true); // Show the modal\n  };\n  const handleCloseModal = () => {\n    setShowModal(false); // Close the modal\n    setScanToDelete(null); // Clear the scan to delete\n  };\n  const scrollToNextSlide = () => {\n    slidesRef.current[1].scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\",\n      // Ensures it aligns properly with snap\n      inline: \"nearest\"\n    });\n  };\n  const scrollToTop = () => {\n    slidesRef.current[0].scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\",\n      // Ensures it aligns properly with snap\n      inline: \"nearest\"\n    });\n  };\n  useEffect(() => {\n    setTotalScans(scans.length);\n  }, [scans, setTotalScans]);\n  const handleAddScan = newScan => {\n    setScans(prevScans => [...prevScans, newScan]);\n  };\n  const handleDeleteScan = async () => {\n    try {\n      let endpoint = `https://api.zukini.com/display/deleteScan?userId=${userId}&key=${scanToDelete}`;\n      const response = await fetch(endpoint, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to delete ${scanToDelete}`);\n      }\n\n      // Update the state to remove the deleted scan\n      setScans(prevScans => prevScans.filter(scan => scan.scankey !== scanToDelete));\n      console.log('Scan deleted successfully:', scanToDelete);\n      setShowModal(false);\n    } catch (error) {\n      console.error('Error deleting scan:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filescontainer\",\n    children: [/*#__PURE__*/_jsxDEV(ScanList, {\n      scans: scans,\n      onDelete: displayModal,\n      scroll: scrollToNextSlide,\n      slidesRef: slidesRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddScan, {\n      onAddScan: handleAddScan,\n      scrollToTop: scrollToTop,\n      slidesRef: slidesRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `deleteWarn-container ${showModal ? \"show\" : \"\"}`,\n      children: showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deleteWarn-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"deleteWarn-heading\",\n          children: \"Are you Sure?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deleteWarnbutton-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"deleteWarn-buttoncancel\" // Updated to match CSS\n            ,\n            onClick: handleCloseModal,\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"deleteWarn-button\" // Updated to match CSS\n            ,\n            onClick: handleDeleteScan,\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(FilesPage, \"uLQILTaNc2TQYZrg/Dx6yXTtStA=\", false, function () {\n  return [useUser];\n});\n_c = FilesPage;\nexport default FilesPage;\nvar _c;\n$RefreshReg$(_c, \"FilesPage\");","map":{"version":3,"names":["useState","useEffect","useRef","ScanList","useUser","AddScan","jsxDEV","_jsxDEV","FilesPage","_s","scans","setScans","showModal","setShowModal","scanToDelete","setScanToDelete","userId","setTotalScans","slidesRef","fetchScans","response","fetch","ok","Error","data","json","console","log","error","displayModal","key","handleCloseModal","scrollToNextSlide","current","scrollIntoView","behavior","block","inline","scrollToTop","length","handleAddScan","newScan","prevScans","handleDeleteScan","endpoint","method","filter","scan","scankey","className","children","onDelete","scroll","fileName","_jsxFileName","lineNumber","columnNumber","onAddScan","onClick","_c","$RefreshReg$"],"sources":["/Users/anthonyli/react-noteletapp/frontend/src/pages/FilesPage.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport ScanList from '../scans/ScanList.js';\nimport { useUser } from '../authentication/UserContext';\nimport AddScan from '../scans/AddScan';\n\n\nconst FilesPage = () => {\n  const [scans, setScans] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [scanToDelete, setScanToDelete] = useState(null); \n  const { userId, setTotalScans } = useUser();\n  const slidesRef = useRef([]);\n  \n  useEffect(() => {\n    const fetchScans = async () => {\n      try {\n        const response = await fetch(`https://api.zukini.com/display/displayscans?userId=${userId}`);;\n        if (!response.ok) {\n          throw new Error('Failed to fetch scans');\n        }\n        const data = await response.json();\n        console.log('Fetched scans:', data);\n        setScans(data);\n      } catch (error) {\n        console.error('Error fetching scans:', error);\n      }\n    };\n\n    fetchScans();\n  }, [userId]);\n  \n  const displayModal = (key) => {\n    setScanToDelete(key); // Set the scan to delete\n    //console.log(\" reckey\",key);\n    setShowModal(true); // Show the modal\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false); // Close the modal\n    setScanToDelete(null); // Clear the scan to delete\n  };\n  \n  \n  \n  const scrollToNextSlide = () => {\n    slidesRef.current[1].scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\", // Ensures it aligns properly with snap\n        inline: \"nearest\",\n    });\n    \n  };\n  const scrollToTop = () => {\n    slidesRef.current[0].scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\", // Ensures it aligns properly with snap\n        inline: \"nearest\",\n    });\n  };\n  \n  useEffect(() => {\n    setTotalScans(scans.length);\n  }, [scans, setTotalScans]);\n  \n  const handleAddScan = (newScan) => {\n    setScans((prevScans) => [...prevScans, newScan]);\n  };\n\n  const handleDeleteScan = async () => {\n    try {\n        let endpoint = `https://api.zukini.com/display/deleteScan?userId=${userId}&key=${scanToDelete}`;\n    \n            const response = await fetch(endpoint, {\n                method: 'DELETE',\n            });\n    \n            if (!response.ok) {\n                throw new Error(`Failed to delete ${scanToDelete}`);\n            }\n      \n\n      // Update the state to remove the deleted scan\n      setScans((prevScans) => prevScans.filter((scan) => scan.scankey !== scanToDelete));\n\n      console.log('Scan deleted successfully:', scanToDelete);\n      setShowModal(false);\n    } catch (error) {\n      console.error('Error deleting scan:', error);\n    }\n  };\n  \n  \n  \n\n\n\n  return (\n    <div className=\"filescontainer\">\n      <ScanList scans={scans} onDelete={displayModal} scroll={scrollToNextSlide} slidesRef={slidesRef}/>\n      \n      <AddScan onAddScan={handleAddScan} scrollToTop={scrollToTop} slidesRef={slidesRef}/>\n      <div className={`deleteWarn-container ${showModal ? \"show\" : \"\"}`}>\n        {showModal && (\n        <div className=\"deleteWarn-modal\">\n        <h2 className=\"deleteWarn-heading\">Are you Sure?</h2>\n        <div className=\"deleteWarnbutton-wrapper\">\n            \n            <button\n            className=\"deleteWarn-buttoncancel\" // Updated to match CSS\n            onClick={handleCloseModal}\n            >\n            No\n            </button>\n            <button\n            className=\"deleteWarn-button\" // Updated to match CSS\n            onClick={handleDeleteScan}\n            >\n            Yes\n            </button>\n        </div>\n        </div>\n        )}\n    </div>\n</div>\n  );\n};\n\nexport default FilesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}