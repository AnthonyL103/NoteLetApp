{"ast":null,"code":"var _jsxFileName = \"/workspaces/NoteLetApp/frontend/src/pages/StudyPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport StudyMenu from '../StudyMenu';\nimport AddFlashCards from '../AddFlashCards';\nimport AddMockTest from '../AddMockTest';\nimport { useNavigate } from 'react-router-dom';\nimport { useScan } from '../ScanContext';\nimport PastFlashCardList from '../PastFlashcardList';\nimport PastMocktestList from '../PastMocktestList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Study = () => {\n  _s();\n  const {\n    currentScan,\n    setCurrentScan\n  } = useScan(); // Access global state for the current scan\n  const navigate = useNavigate();\n  const [showFlashCards, setShowFlashCards] = useState(false); // State to control rendering AddFlashCards\n  const [showMockTests, setShowMockTests] = useState(false); // State to control rendering AddFlashCards\n  const [NewMTEntry, setNewMTEntry] = useState(null);\n  const [NewFCEntry, setNewFCEntry] = useState(null);\n  const [clickedButton, setClickedButton] = useState(null); // Track which button was clicked\n  const filepath = (currentScan === null || currentScan === void 0 ? void 0 : currentScan.filepath) || \"\";\n  const scanname = (currentScan === null || currentScan === void 0 ? void 0 : currentScan.scanname) || \"\";\n  const text = (currentScan === null || currentScan === void 0 ? void 0 : currentScan.text) || \"\";\n  const date = (currentScan === null || currentScan === void 0 ? void 0 : currentScan.date) || \"\";\n  const slidesRef = useRef([]);\n  const scrollToNextSlide = () => {\n    const currentSlideIndex = slidesRef.current.findIndex(slide => slide.getBoundingClientRect().top >= 0);\n    if (currentSlideIndex !== -1 && currentSlideIndex < slidesRef.current.length - 1) {\n      slidesRef.current[currentSlideIndex + 1].scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\",\n        inline: \"nearest\"\n      });\n    }\n  };\n  const scrollToTop = () => {\n    slidesRef.current[0].scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\",\n      // Ensures it aligns properly with snap\n      inline: \"nearest\"\n    });\n  };\n  if (!currentScan) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"studycontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: el => slidesRef.current[0] = el,\n        className: \"studypagecont\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"homepagecont-title\",\n          children: \"Study Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"homepagecont-body\",\n          children: \"No scan selected. Please go back and choose a scan. Or a previous study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addscanwrap\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nav-button\",\n            onClick: () => navigate('/files'),\n            children: \"Select Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PastFlashCardList, {\n        NewFCEntry: NewFCEntry,\n        scroll: scrollToNextSlide,\n        slidesRef: slidesRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PastMocktestList, {\n        NewMTEntry: NewMTEntry,\n        backtoTop: scrollToTop,\n        slidesRef: slidesRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Trig to show AddFlashCards component\n  const handleGenerateFlashcards = () => {\n    setClickedButton(\"flashcards\");\n    setShowFlashCards(true);\n  };\n  const handleGenerateMocktests = () => {\n    setClickedButton(\"mocktests\");\n    setShowMockTests(true);\n  };\n  const handleCloseFlashcards = () => {\n    setShowFlashCards(false); // Close modal and reset\n    setClickedButton(null);\n  };\n  const handleCloseMocktests = () => {\n    setShowMockTests(false); // Close modal and reset\n    setClickedButton(null);\n  };\n  const goToSwitchScan = () => {\n    //clear curr scan\n    setCurrentScan(null);\n    localStorage.removeItem('currentScan');\n    navigate('/files');\n  };\n  const onAddMockTest = payload => {\n    setNewMTEntry(payload);\n  };\n  const onAddFlashCard = payload => {\n    setNewFCEntry(payload);\n  };\n\n  //showflash cards is the condition representing if we should render addflashcards.js or not\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"studycontainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: el => slidesRef.current[0] = el,\n      className: \"studypagecont\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scanheaderwrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"scans-title\",\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"viewpast-button\",\n          onClick: scrollToNextSlide,\n          children: \"View Saved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notesholder\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Scan name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 19\n          }, this), \" \", scanname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Date: \", /*#__PURE__*/_jsxDEV(\"small\", {\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Content:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(StudyMenu, {\n        onCardsClick: handleGenerateFlashcards,\n        onTestClick: handleGenerateMocktests,\n        onSwitchScanClick: goToSwitchScan,\n        clickedButton: clickedButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), showFlashCards && /*#__PURE__*/_jsxDEV(AddFlashCards, {\n      filepath: filepath,\n      scanname: scanname,\n      text: text,\n      date: date,\n      onClose: handleCloseFlashcards,\n      onAddFlashCard: onAddFlashCard,\n      Past: false,\n      prevFC: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), showMockTests && /*#__PURE__*/_jsxDEV(AddMockTest, {\n      filepath: filepath,\n      scanname: scanname,\n      text: text,\n      date: date,\n      onClose: handleCloseMocktests,\n      onAddMockTest: onAddMockTest,\n      Past: false,\n      prevMT: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PastFlashCardList, {\n      NewFCEntry: NewFCEntry,\n      scroll: scrollToNextSlide,\n      slidesRef: slidesRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(PastMocktestList, {\n      NewMTEntry: NewMTEntry,\n      backtoTop: scrollToTop,\n      slidesRef: slidesRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(Study, \"e/L70zbhY1C+FkXMsV1GIrjeIFY=\", false, function () {\n  return [useScan, useNavigate];\n});\n_c = Study;\nexport default Study;\nvar _c;\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"names":["useState","useRef","StudyMenu","AddFlashCards","AddMockTest","useNavigate","useScan","PastFlashCardList","PastMocktestList","jsxDEV","_jsxDEV","Study","_s","currentScan","setCurrentScan","navigate","showFlashCards","setShowFlashCards","showMockTests","setShowMockTests","NewMTEntry","setNewMTEntry","NewFCEntry","setNewFCEntry","clickedButton","setClickedButton","filepath","scanname","text","date","slidesRef","scrollToNextSlide","currentSlideIndex","current","findIndex","slide","getBoundingClientRect","top","length","scrollIntoView","behavior","block","inline","scrollToTop","className","children","ref","el","fileName","_jsxFileName","lineNumber","columnNumber","onClick","scroll","backtoTop","handleGenerateFlashcards","handleGenerateMocktests","handleCloseFlashcards","handleCloseMocktests","goToSwitchScan","localStorage","removeItem","onAddMockTest","payload","onAddFlashCard","onCardsClick","onTestClick","onSwitchScanClick","onClose","Past","prevFC","prevMT","_c","$RefreshReg$"],"sources":["/workspaces/NoteLetApp/frontend/src/pages/StudyPage.js"],"sourcesContent":["import { useState, useRef } from 'react';\nimport StudyMenu from '../StudyMenu';\nimport AddFlashCards from '../AddFlashCards';\nimport AddMockTest from '../AddMockTest';\nimport { useNavigate } from 'react-router-dom';\nimport { useScan } from '../ScanContext';\nimport PastFlashCardList from '../PastFlashcardList';\nimport PastMocktestList from '../PastMocktestList';\n\n\nconst Study = () => {\n    const { currentScan, setCurrentScan } = useScan(); // Access global state for the current scan\n    const navigate = useNavigate();\n    const [showFlashCards, setShowFlashCards] = useState(false); // State to control rendering AddFlashCards\n    const [showMockTests, setShowMockTests] = useState(false); // State to control rendering AddFlashCards\n    const [NewMTEntry, setNewMTEntry, ] = useState(null)\n    const [NewFCEntry, setNewFCEntry, ] = useState(null)\n    const [clickedButton, setClickedButton] = useState(null); // Track which button was clicked\n    const filepath = currentScan?.filepath || \"\";\n    const scanname = currentScan?.scanname || \"\";\n    const text = currentScan?.text || \"\";\n    const date = currentScan?.date || \"\";\n\n\n    const slidesRef = useRef([]);\n\n    const scrollToNextSlide = () => {\n        const currentSlideIndex = slidesRef.current.findIndex(slide =>\n            slide.getBoundingClientRect().top >= 0\n        );\n\n        if (currentSlideIndex !== -1 && currentSlideIndex < slidesRef.current.length - 1) {\n            slidesRef.current[currentSlideIndex + 1].scrollIntoView({\n                behavior: \"smooth\",\n                block: \"start\",\n                inline: \"nearest\",\n            });\n        }\n\n    };\n\n    const scrollToTop = () => {\n        slidesRef.current[0].scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\", // Ensures it aligns properly with snap\n        inline: \"nearest\",\n        });\n    };\n\n  if (!currentScan) {\n    return (\n      <div className=\"studycontainer\">\n        <div ref={(el) => slidesRef.current[0] = el}  className=\"studypagecont\">\n            <p className=\"homepagecont-title\">Study Page</p>\n            <p className=\"homepagecont-body\">No scan selected. Please go back and choose a scan. Or a previous study</p>\n            <div className=\"addscanwrap\">\n            <button className=\"nav-button\" onClick={() => navigate('/files')}>Select Scan</button>\n            </div>\n        </div>\n        <PastFlashCardList NewFCEntry={NewFCEntry} scroll={scrollToNextSlide} slidesRef={slidesRef}/>\n        <PastMocktestList NewMTEntry={NewMTEntry} backtoTop={scrollToTop} slidesRef={slidesRef}/>\n      </div>\n      \n    );\n  }\n\n  \n  \n\n  // Trig to show AddFlashCards component\n  const handleGenerateFlashcards = () => {\n    setClickedButton(\"flashcards\");\n    setShowFlashCards(true);\n  };\n  \n  const handleGenerateMocktests = () => {\n    setClickedButton(\"mocktests\");\n    setShowMockTests(true);\n  };\n  \n  const handleCloseFlashcards = () => {\n    setShowFlashCards(false); // Close modal and reset\n    setClickedButton(null);\n  };\n  \n  const handleCloseMocktests = () => {\n    setShowMockTests(false); // Close modal and reset\n    setClickedButton(null);\n  };\n  \n  const goToSwitchScan =() => {\n    //clear curr scan\n    setCurrentScan(null);\n    localStorage.removeItem('currentScan');\n    navigate('/files');\n  }\n  \n  const onAddMockTest =(payload) => {\n    setNewMTEntry(payload);\n  };\n  const onAddFlashCard =(payload) => {\n    setNewFCEntry(payload);\n  };\n\n  //showflash cards is the condition representing if we should render addflashcards.js or not\n  return (\n    <div  className=\"studycontainer\">\n        <div ref={(el) => slidesRef.current[0] = el} className=\"studypagecont\">\n            <div className=\"scanheaderwrapper\">\n            <p className=\"scans-title\">Study</p>\n            <button className=\"viewpast-button\" onClick={scrollToNextSlide}>View Saved</button>\n                \n            </div>\n         <div className=\"notesholder\">\n            <span><strong>Scan name:</strong> {scanname}</span>\n            <span><strong>Date: <small>{date}</small></strong></span>\n            <br />\n            <span><strong>Content:</strong></span>\n                <span>{text}</span>\n        </div>\n         <StudyMenu onCardsClick={handleGenerateFlashcards} onTestClick={handleGenerateMocktests} onSwitchScanClick={goToSwitchScan} clickedButton={clickedButton}  />\n         \n        </div>\n      \n      {showFlashCards && (\n        <AddFlashCards\n          filepath={filepath}\n          scanname={scanname}\n          text={text}\n          date={date}\n          onClose={handleCloseFlashcards}\n          onAddFlashCard={onAddFlashCard}\n          Past={false}\n          prevFC={null}\n        />\n      )}\n      {showMockTests && (\n        <AddMockTest\n          filepath={filepath}\n          scanname={scanname}\n          text={text}\n          date={date}\n          onClose={handleCloseMocktests}\n          onAddMockTest={onAddMockTest}\n          Past={false}\n          prevMT={null}\n        />\n        )}\n        \n    <PastFlashCardList NewFCEntry={NewFCEntry} scroll={scrollToNextSlide} slidesRef={slidesRef}/>\n    <PastMocktestList NewMTEntry={NewMTEntry} backtoTop={scrollToTop} slidesRef={slidesRef}/>\n    \n    </div>\n  );\n};\n\nexport default Study;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}